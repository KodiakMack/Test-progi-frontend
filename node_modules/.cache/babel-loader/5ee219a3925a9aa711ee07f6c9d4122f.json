{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Gaulois\\\\Documents\\\\GitHub\\\\test-progi-react\\\\src\\\\Components\\\\Steps\\\\StepTwo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepOne = _ref => {\n  _s();\n\n  let {\n    nextStep,\n    handleFormData,\n    values\n  } = _ref;\n  const [error, setError] = useState(false);\n\n  const submitFormData = e => {\n    e.preventDefault();\n\n    if (validator.isEmpty(values.firstName) || validator.isEmpty(values.lastName)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitFormData,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              border: error ? \"2px solid red\" : \"\"\n            },\n            name: \"firstName\",\n            defaultValue: values.firstName,\n            type: \"text\",\n            placeholder: \"First Name\",\n            onChange: handleFormData(\"firstName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), [\"checkbox\", \"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: type,\n            id: `default-${type}`,\n            label: `default ${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            disabled: true,\n            type: type,\n            label: `disabled ${type}`,\n            id: `disabled-default-${type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, `default-${type}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepOne, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useState","Form","Card","Button","validator","StepOne","nextStep","handleFormData","values","error","setError","submitFormData","e","preventDefault","isEmpty","firstName","lastName","border","color","map","type"],"sources":["C:/Users/Le Gaulois/Documents/GitHub/test-progi-react/src/Components/Steps/StepTwo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\n\r\nconst StepOne = ({ nextStep, handleFormData, values }) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      validator.isEmpty(values.firstName) ||\r\n      validator.isEmpty(values.lastName)\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\" \">\r\n      <div>\r\n        <Form onSubmit={submitFormData}>\r\n          {/* original */}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Vehicle</Form.Label>\r\n            <Form.Control\r\n              style={{ border: error ? \"2px solid red\" : \"\" }}\r\n              name=\"firstName\"\r\n              defaultValue={values.firstName}\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={handleFormData(\"firstName\")}\r\n            />\r\n            {error ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Form.Group>\r\n          {/* trying this.... */}\r\n          {[\"checkbox\", \"radio\"].map((type) => (\r\n            <div key={`default-${type}`} className=\"mb-3\">\r\n              <Form.Check\r\n                type={type}\r\n                id={`default-${type}`}\r\n                label={`default ${type}`}\r\n              />\r\n\r\n              <Form.Check\r\n                disabled\r\n                type={type}\r\n                label={`disabled ${type}`}\r\n                id={`disabled-default-${type}`}\r\n              />\r\n            </div>\r\n          ))}\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,OAAO,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAAEC,QAAF;IAAYC,cAAZ;IAA4BC;EAA5B,CAAyC;EACxD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;;EAEA,MAAMW,cAAc,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;;IAEA,IACET,SAAS,CAACU,OAAV,CAAkBN,MAAM,CAACO,SAAzB,KACAX,SAAS,CAACU,OAAV,CAAkBN,MAAM,CAACQ,QAAzB,CAFF,EAGE;MACAN,QAAQ,CAAC,IAAD,CAAR;IACD,CALD,MAKO;MACLJ,QAAQ;IACT;EACF,CAXD;;EAaA,oBACE;IAAK,SAAS,EAAC,GAAf;IAAA,uBACE;MAAA,uBACE,QAAC,IAAD;QAAM,QAAQ,EAAEK,cAAhB;QAAA,wBAEE,QAAC,IAAD,CAAM,KAAN;UAAY,SAAS,EAAC,MAAtB;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE,QAAC,IAAD,CAAM,OAAN;YACE,KAAK,EAAE;cAAEM,MAAM,EAAER,KAAK,GAAG,eAAH,GAAqB;YAApC,CADT;YAEE,IAAI,EAAC,WAFP;YAGE,YAAY,EAAED,MAAM,CAACO,SAHvB;YAIE,IAAI,EAAC,MAJP;YAKE,WAAW,EAAC,YALd;YAME,QAAQ,EAAER,cAAc,CAAC,WAAD;UAN1B;YAAA;YAAA;YAAA;UAAA,QAFF,EAUGE,KAAK,gBACJ,QAAC,IAAD,CAAM,IAAN;YAAW,KAAK,EAAE;cAAES,KAAK,EAAE;YAAT,CAAlB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADI,GAKJ,EAfJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,EAqBG,CAAC,UAAD,EAAa,OAAb,EAAsBC,GAAtB,CAA2BC,IAAD,iBACzB;UAA6B,SAAS,EAAC,MAAvC;UAAA,wBACE,QAAC,IAAD,CAAM,KAAN;YACE,IAAI,EAAEA,IADR;YAEE,EAAE,EAAG,WAAUA,IAAK,EAFtB;YAGE,KAAK,EAAG,WAAUA,IAAK;UAHzB;YAAA;YAAA;YAAA;UAAA,QADF,eAOE,QAAC,IAAD,CAAM,KAAN;YACE,QAAQ,MADV;YAEE,IAAI,EAAEA,IAFR;YAGE,KAAK,EAAG,YAAWA,IAAK,EAH1B;YAIE,EAAE,EAAG,oBAAmBA,IAAK;UAJ/B;YAAA;YAAA;YAAA;UAAA,QAPF;QAAA,GAAW,WAAUA,IAAK,EAA1B;UAAA;UAAA;UAAA;QAAA,QADD,CArBH,eAsCE,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAtCF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAgDD,CAhED;;GAAMf,O;;KAAAA,O;AAkEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}