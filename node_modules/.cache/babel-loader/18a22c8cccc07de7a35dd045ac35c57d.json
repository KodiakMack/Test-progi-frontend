{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Gaulois\\\\Documents\\\\GitHub\\\\test-progi-react\\\\src\\\\Components\\\\Steps\\\\StepTwo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Card, Button, Image } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport pic1 from \"../../assets/pic1.jpg\";\nimport pic2 from \"../../assets/pic2.jpg\";\nimport pic3 from \"../../assets/pic3.jpg\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepOne = _ref => {\n  _s();\n\n  let {\n    nextStep,\n    handleFormData,\n    values,\n    prevStep\n  } = _ref;\n  const [error, setError] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState(\"1\");\n  const radios = [{\n    name: \"Active\",\n    value: \"1\"\n  }, {\n    name: \"Radio\",\n    value: \"2\"\n  }, {\n    name: \"Radio\",\n    value: \"3\"\n  }];\n\n  const submitFormData = e => {\n    e.preventDefault();\n\n    if (validator.isEmpty(values.vehicleSelect) || validator.isEmpty(values.maxPrice)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vehicle-select\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitFormData,\n        children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"mb-2\",\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: \"toggle-check\",\n            type: \"checkbox\",\n            variant: \"secondary\",\n            checked: checked,\n            value: \"1\",\n            onChange: e => setChecked(e.currentTarget.checked),\n            children: \"Checked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          className: \"mb-2\",\n          children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${idx}`,\n            type: \"radio\",\n            variant: \"secondary\",\n            name: \"radio\",\n            value: radio.value,\n            checked: radioValue === radio.value,\n            onChange: e => setRadioValue(e.currentTarget.value),\n            children: radio.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          className: \"mb-2\",\n          id: \"toggle-check\",\n          type: \"checkbox\",\n          variant: \"outline-primary\",\n          checked: checked,\n          value: \"1\",\n          onChange: e => setChecked(e.currentTarget.checked),\n          children: \"Checked\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${idx}`,\n            type: \"radio\",\n            variant: idx % 2 ? \"outline-success\" : \"outline-danger\",\n            name: \"radio\",\n            value: radio.value,\n            checked: radioValue === radio.value,\n            onChange: e => setRadioValue(e.currentTarget.value),\n            children: radio.name\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Maximum Bidding Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              border: error ? \"2px solid red\" : \"\"\n            },\n            name: \"maxPrice\",\n            defaultValue: values.maxPrice,\n            type: \"number\",\n            placeholder: \"Maximum Price\",\n            onChange: handleFormData(\"maxPrice\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n            style: {\n              color: \"red\"\n            },\n            children: \"This is a required field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepOne, \"GaMwhADzRwETjCLzUt5NMzSb3sc=\");\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useState","Form","Card","Button","Image","validator","pic1","pic2","pic3","ButtonGroup","ToggleButton","StepOne","nextStep","handleFormData","values","prevStep","error","setError","checked","setChecked","radioValue","setRadioValue","radios","name","value","submitFormData","e","preventDefault","isEmpty","vehicleSelect","maxPrice","currentTarget","map","radio","idx","border","color"],"sources":["C:/Users/Le Gaulois/Documents/GitHub/test-progi-react/src/Components/Steps/StepTwo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Card, Button, Image } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\nimport pic1 from \"../../assets/pic1.jpg\";\r\nimport pic2 from \"../../assets/pic2.jpg\";\r\nimport pic3 from \"../../assets/pic3.jpg\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\nconst StepOne = ({ nextStep, handleFormData, values, prevStep }) => {\r\n  const [error, setError] = useState(false);\r\n  const [checked, setChecked] = useState(false);\r\n  const [radioValue, setRadioValue] = useState(\"1\");\r\n\r\n  const radios = [\r\n    { name: \"Active\", value: \"1\" },\r\n    { name: \"Radio\", value: \"2\" },\r\n    { name: \"Radio\", value: \"3\" },\r\n  ];\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      validator.isEmpty(values.vehicleSelect) ||\r\n      validator.isEmpty(values.maxPrice)\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"vehicle-select\">\r\n      <div>\r\n        <Form onSubmit={submitFormData}>\r\n          <ButtonGroup className=\"mb-2\">\r\n            <ToggleButton\r\n              id=\"toggle-check\"\r\n              type=\"checkbox\"\r\n              variant=\"secondary\"\r\n              checked={checked}\r\n              value=\"1\"\r\n              onChange={(e) => setChecked(e.currentTarget.checked)}\r\n            >\r\n              Checked\r\n            </ToggleButton>\r\n          </ButtonGroup>\r\n          <br />\r\n          <ButtonGroup className=\"mb-2\">\r\n            {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                id={`radio-${idx}`}\r\n                type=\"radio\"\r\n                variant=\"secondary\"\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n          <br />\r\n          <ToggleButton\r\n            className=\"mb-2\"\r\n            id=\"toggle-check\"\r\n            type=\"checkbox\"\r\n            variant=\"outline-primary\"\r\n            checked={checked}\r\n            value=\"1\"\r\n            onChange={(e) => setChecked(e.currentTarget.checked)}\r\n          >\r\n            Checked\r\n          </ToggleButton>\r\n          <br />\r\n          <ButtonGroup>\r\n            {radios.map((radio, idx) => (\r\n              <ToggleButton\r\n                key={idx}\r\n                id={`radio-${idx}`}\r\n                type=\"radio\"\r\n                variant={idx % 2 ? \"outline-success\" : \"outline-danger\"}\r\n                name=\"radio\"\r\n                value={radio.value}\r\n                checked={radioValue === radio.value}\r\n                onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n              >\r\n                {radio.name}\r\n              </ToggleButton>\r\n            ))}\r\n          </ButtonGroup>\r\n\r\n          {/* toggle buttons  */}\r\n          {/* <div className=\"vehicles\">\r\n            <div className=\"vehicle-card\">\r\n              <img src={pic1} alt=\"\" />\r\n              <p>Honda Civic 2020</p>\r\n              <input\r\n                className=\"\"\r\n                name=\"radio1\"\r\n                type=\"radio\"\r\n                defaultValue={values.vehicleSelect}\r\n                value=\"Honda Civic 2020\"\r\n                onChange={(e) => {\r\n                  alert(\"Honda Civic 2020 Selected\");\r\n                  handleFormData(\"vehicleSelect\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"vehicle-card\">\r\n              <img src={pic2} alt=\"\" />\r\n              <p>Ford F150 2014</p>\r\n              <input\r\n                className=\"\"\r\n                name=\"radio2\"\r\n                type=\"radio\"\r\n                value=\"Ford F150 2014\"\r\n                onChange={(e) => {\r\n                  alert(\"Honda Civic 2020 Selected\");\r\n                  handleFormData(\"firstName\");\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"vehicle-card\">\r\n              <img src={pic3} alt=\"\" />\r\n              <p>Nissan Murano 2011</p>\r\n              <input\r\n                className=\"\"\r\n                name=\"radio3\"\r\n                type=\"radio\"\r\n                value=\"Nissan Murano 2011\"\r\n                onChange={(e) => {\r\n                  alert(\"Honda Civic 2020 Selected\");\r\n                  handleFormData(\"firstName\");\r\n                }}\r\n              />\r\n            </div>\r\n          </div> */}\r\n          {/* max price */}\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Maximum Bidding Price</Form.Label>\r\n            <Form.Control\r\n              style={{ border: error ? \"2px solid red\" : \"\" }}\r\n              name=\"maxPrice\"\r\n              defaultValue={values.maxPrice}\r\n              type=\"number\"\r\n              placeholder=\"Maximum Price\"\r\n              onChange={handleFormData(\"maxPrice\")}\r\n            />\r\n            {error ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Form.Group>\r\n          <div />\r\n\r\n          {/* <Form.Group className=\"mb-3\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              style={{ border: error ? \"2px solid red\" : \"\" }}\r\n              name=\"firstName\"\r\n              defaultValue={values.firstName}\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={handleFormData(\"firstName\")}\r\n            />\r\n            {error ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Form.Group> */}\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}