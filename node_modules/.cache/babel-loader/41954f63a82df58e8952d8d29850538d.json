{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Gaulois\\\\Documents\\\\GitHub\\\\test-progi-react\\\\src\\\\Components\\\\Forms\\\\StepTwo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\"; // creating functional component ans getting props from app.js and destucturing them\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StepTwo = _ref => {\n  _s();\n\n  let {\n    nextStep,\n    handleFormData,\n    prevStep,\n    values\n  } = _ref;\n  //creating error state for validation\n  const [error, setError] = useState(false); // after form submit validating the form data using validator\n\n  const submitFormData = e => {\n    e.preventDefault(); // checking if value of first name and last name is empty show error else take to next step\n\n    if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginTop: 100\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitFormData,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              style: {\n                border: error ? \"2px solid red\" : \"\"\n              },\n              type: \"number\",\n              placeholder: \"Age\",\n              onChange: handleFormData(\"age\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: \"red\"\n              },\n              children: \"This is a required field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              style: {\n                border: error ? \"2px solid red\" : \"\"\n              },\n              type: \"email\",\n              placeholder: \"email\",\n              onChange: handleFormData(\"email\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), error ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: \"red\"\n              },\n              children: \"This is a required field\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-around\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: prevStep,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(StepTwo, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n\n_c = StepTwo;\nexport default StepTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepTwo\");","map":{"version":3,"names":["React","useState","Form","Card","Button","validator","StepTwo","nextStep","handleFormData","prevStep","values","error","setError","submitFormData","e","preventDefault","isEmpty","age","email","marginTop","border","color","display","justifyContent"],"sources":["C:/Users/Le Gaulois/Documents/GitHub/test-progi-react/src/Components/Forms/StepTwo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\n\r\n// creating functional component ans getting props from app.js and destucturing them\r\nconst StepTwo = ({ nextStep, handleFormData, prevStep, values }) => {\r\n   //creating error state for validation\r\n  const [error, setError] = useState(false);\r\n\r\n    // after form submit validating the form data using validator\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n     // checking if value of first name and last name is empty show error else take to next step\r\n    if (validator.isEmpty(values.age) || validator.isEmpty(values.email)) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Card style={{ marginTop: 100 }}>\r\n        <Card.Body>\r\n          <Form onSubmit={submitFormData}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control\r\n                style={{ border: error ? \"2px solid red\" : \"\" }}\r\n                type=\"number\"\r\n                placeholder=\"Age\"\r\n                onChange={handleFormData(\"age\")}\r\n              />\r\n              {error ? (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  This is a required field\r\n                </Form.Text>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                style={{ border: error ? \"2px solid red\" : \"\" }}\r\n                type=\"email\"\r\n                placeholder=\"email\"\r\n                onChange={handleFormData(\"email\")}\r\n              />\r\n              {error ? (\r\n                <Form.Text style={{ color: \"red\" }}>\r\n                  This is a required field\r\n                </Form.Text>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Form.Group>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n              <Button variant=\"primary\" onClick={prevStep}>\r\n                Previous\r\n              </Button>\r\n\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StepTwo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}