{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le Gaulois\\\\Documents\\\\GitHub\\\\test-progi-react\\\\src\\\\Components\\\\Steps\\\\StepTwo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Card, Button } from \"react-bootstrap\";\nimport validator from \"validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StepOne = _ref => {\n  _s();\n\n  let {\n    nextStep,\n    handleFormData,\n    values\n  } = _ref;\n  const [error, setError] = useState(false);\n\n  const submitFormData = e => {\n    e.preventDefault();\n\n    if (validator.isEmpty(values.firstName) || validator.isEmpty(values.lastName)) {\n      setError(true);\n    } else {\n      nextStep();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitFormData,\n        children: [[\"radio\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            inline: true,\n            name: \"option1\",\n            defaultValue: values.firstName,\n            label: \"1\",\n            name: \"group1\",\n            onSelect: handleFormData(\"vehicleSelect\"),\n            type: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, `inline-${type}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StepOne, \"AvrsuJm02Cqlq6/LWpvA21zDecQ=\");\n\n_c = StepOne;\nexport default StepOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"StepOne\");","map":{"version":3,"names":["React","useState","Form","Card","Button","validator","StepOne","nextStep","handleFormData","values","error","setError","submitFormData","e","preventDefault","isEmpty","firstName","lastName","map","type"],"sources":["C:/Users/Le Gaulois/Documents/GitHub/test-progi-react/src/Components/Steps/StepTwo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Card, Button } from \"react-bootstrap\";\r\nimport validator from \"validator\";\r\n\r\nconst StepOne = ({ nextStep, handleFormData, values }) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  const submitFormData = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      validator.isEmpty(values.firstName) ||\r\n      validator.isEmpty(values.lastName)\r\n    ) {\r\n      setError(true);\r\n    } else {\r\n      nextStep();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\" \">\r\n      <div>\r\n        <Form onSubmit={submitFormData}>\r\n          {/* original\r\n          <Form.Group className=\"mb-3\">\r\n            <Form.Label>Vehicle</Form.Label>\r\n            <Form.Control\r\n              style={{ border: error ? \"2px solid red\" : \"\" }}\r\n              name=\"firstName\"\r\n              defaultValue={values.firstName}\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n              onChange={handleFormData(\"firstName\")}\r\n            />\r\n            {error ? (\r\n              <Form.Text style={{ color: \"red\" }}>\r\n                This is a required field\r\n              </Form.Text>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Form.Group> */}\r\n\r\n          {/* trying this.... */}\r\n          {[\"radio\"].map((type) => (\r\n            <div key={`inline-${type}`} className=\"mb-3\">\r\n              <Form.Check \r\n              inline \r\n              name=\"option1\"               \r\n              defaultValue={values.firstName}\r\n              label=\"1\" \r\n              name=\"group1\" \r\n              onSelect={handleFormData(\"vehicleSelect\")}\r\n\r\n              type={type} />\r\n             </div>\r\n          ))}\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepOne;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,iBAAnC;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;AAEA,MAAMC,OAAO,GAAG,QAA0C;EAAA;;EAAA,IAAzC;IAAEC,QAAF;IAAYC,cAAZ;IAA4BC;EAA5B,CAAyC;EACxD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC;;EAEA,MAAMW,cAAc,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;;IAEA,IACET,SAAS,CAACU,OAAV,CAAkBN,MAAM,CAACO,SAAzB,KACAX,SAAS,CAACU,OAAV,CAAkBN,MAAM,CAACQ,QAAzB,CAFF,EAGE;MACAN,QAAQ,CAAC,IAAD,CAAR;IACD,CALD,MAKO;MACLJ,QAAQ;IACT;EACF,CAXD;;EAaA,oBACE;IAAK,SAAS,EAAC,GAAf;IAAA,uBACE;MAAA,uBACE,QAAC,IAAD;QAAM,QAAQ,EAAEK,cAAhB;QAAA,WAsBG,CAAC,OAAD,EAAUM,GAAV,CAAeC,IAAD,iBACb;UAA4B,SAAS,EAAC,MAAtC;UAAA,uBACE,QAAC,IAAD,CAAM,KAAN;YACA,MAAM,MADN;YAEA,IAAI,EAAC,SAFL;YAGA,YAAY,EAAEV,MAAM,CAACO,SAHrB;YAIA,KAAK,EAAC,GAJN;YAKA,IAAI,EAAC,QALL;YAMA,QAAQ,EAAER,cAAc,CAAC,eAAD,CANxB;YAQA,IAAI,EAAEW;UARN;YAAA;YAAA;YAAA;UAAA;QADF,GAAW,UAASA,IAAK,EAAzB;UAAA;UAAA;UAAA;QAAA,QADD,CAtBH,eAoCE,QAAC,MAAD;UAAQ,OAAO,EAAC,SAAhB;UAA0B,IAAI,EAAC,QAA/B;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApCF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8CD,CA9DD;;GAAMb,O;;KAAAA,O;AAgEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}